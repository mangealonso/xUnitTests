@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">ToDos</h1>
    <div class="form-center">
        <form asp-controller="ToDo" asp-action="Save" method="post" id="todoForm" class="form-group">
            <label>
                <input type="text" id="titleText" name="titleText" placeholder="Enter a title" 
                    value="@(!string.IsNullOrEmpty(ViewData["titleText"]?.ToString()) ? ViewData["titleText"] : string.Empty)" />
                <span class="text-danger">@Html.ValidationMessage("Title")</span>
            </label>
            <label>
                <input type="text" id="descriptionText" name="descriptionText" placeholder="Enter a description" 
                    value="@(!string.IsNullOrEmpty(ViewData["descriptionText"]?.ToString()) ? ViewData["descriptionText"] : string.Empty)" />
                <span class="text-danger">@Html.ValidationMessage("Description")</span>
            </label>
            <button type="submit">Add ToDo</button>        
        </form>
    </div>

    <ul id="todoList">
        @if (Model != null)
        {
            @foreach (var note in Model)
            {
                <li class="todo-container">
                    <div class="todo-content">
                        <span class="@(note.IsDone ? "todo-text completed" : "todo-text")">
                            @note.Title - @note.Description
                        </span>
                    </div>
                    <div class="todo-actions">
                        @if (!note.IsDone)
                        {
                            <form asp-controller="ToDo" asp-action="ToggleStatus" method="post">
                                <input type="hidden" name="id" value="@note.Id" />
                                <button type="submit" class="complete-button">
                                    Mark as Completed
                                </button>
                            </form>
                        }
                        else
                        {
                            <form asp-controller="ToDo" asp-action="ToggleStatus" method="post">
                                <input type="hidden" name="id" value="@note.Id" />
                                <button type="submit" class="complete-button completed">
                                    Mark as Not Completed
                                </button>
                            </form>
                            <form asp-controller="ToDo" asp-action="DeleteCompleted" method="post">
                                <input type="hidden" name="id" value="@note.Id" />
                                <button type="submit">
                                    Delete
                                </button>
                            </form>
                        }
                    </div>
                </li>
            }
            @if (((IEnumerable<NoteResult>)Model).Any(note => note.IsDone))
            {
                <li>
                    <form asp-controller="ToDo" asp-action="DeleteAllCompleted" method="post">
                        <button type="submit">
                            Delete All Completed ToDos
                        </button>
                    </form>
                </li>
            }
        }        
    </ul>
</div>
